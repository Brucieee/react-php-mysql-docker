name: Docker CI & Push to ECR

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: react_php_app
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql
          ini-values: post_max_size=256M, upload_max_filesize=256M
          coverage: none
          tools: composer
          composer-cache: true

      - name: Wait for MySQL
        run: |
          for i in $(seq 1 20); do
            mysqladmin ping -h127.0.0.1 -uroot -proot &> /dev/null && break
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Install Laravel dependencies
        run: |
          cd server
          composer install --no-interaction --prefer-dist

      - name: Set Laravel APP_KEY
        run: |
          cd server
          if [ ! -f .env ]; then cp .env.example .env; fi
          php artisan key:generate

      - name: Install React dependencies
        run: |
          cd client
          npm ci || npm install

      - name: Run Laravel tests
        run: |
          cd server
          php artisan test

      - name: Run React build
        run: |
          cd client
          npm run build

      # ----------------------------
      # Docker build & push to ECR
      # ----------------------------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push React Docker image
        run: |
          docker build -t react-php-mysql-app:latest ./client
          docker tag react-php-mysql-app:latest ${{ steps.login-ecr.outputs.registry }}/react-php-mysql-app:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/react-php-mysql-app:latest

      - name: Build & Push Laravel Docker image
        run: |
          docker build -t laravel-app:latest ./server
          docker tag laravel-app:latest ${{ steps.login-ecr.outputs.registry }}/laravel-app:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/laravel-app:latest
